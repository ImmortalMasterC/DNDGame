
Just 'make all' should create the necessary binaries.  Be sure
to move them to the game's /bin directory.


GSTAT COMMAND:

	The gstat command produces various statistical information about
	all the characters in mordor.  In addition, gstat can list all the 
	mordor characters that exceed a given amount of gold, play time,
	or level.

Syntax:
        gstat [-glts #] [-d] [-P <players ...>]

	The flags can appear in any order except for the '-P' which must be 
	the last flag in the command arguement list.  Also each flag must 
	appear separately.   i.e. -gl 10 needs to be -g 10 -l 10
	Due to the amount of data output, the static breakdown will not be
	listed if the -d, -g, -l or -t flags are used.

    -d    The '-d' flag will list all the players that are either
          a DM, a caretaker or None.

    -g #  The '-g' flag will list all players with '#' or more
          gold.

    -l #  The '-l' flag will list all players that are '#'+
          level. 

          Breakdown on players '#'+ level.  This is intended to 
          allow for a more accurate statistical breakdown.  Players
          often create a 'one time' character which can skew the
          true statistics of the game.

    -t #  The '-t flag will list all players that have a play
          time greater than '#' seconds..

    -P <players...> The '-P' flag causes gstat to list only the 
          player's names specified after the '-P'.  If the '-P
          is not present, gstat will use all the characters in
          the players directory.  Note: the player's names following
          '-P' still must be in the player/ directory. The '-P'
          was intended as a means to limit gstat static domain.

Examples:
      gstat -l 10
         -- list all the players that are 10+ level.

      gstat -d -P P1 P2 P3
         -- list all the DMs in the player list P1, P2, P3

      gstat -s 2
         -- only perform the statical breakdown on players that
            are at 2nd or higher level.

Other notes:

Class / Level Breakdown:
    The number following the Class number reports the total 
    number of players of that class.  The two lines of numbers
    represents the number of players of the given class at
    each level.  The first line of numbers corresponds to 
    1st to 13th level , the second line of numbers corresponds
    to 14th to 26th level, where slot 26 is for all players 
    that are 26+ level..

    Due to the amount of output from gstat, and the length of time
    to search all the players, it might be easier to redirect gstat 
    output to a file: gstat > gstat_file.


PLIST COMMAND:

    The plist commands provides a simply way to list a given player's
	class, level, password, and inventory without having to use the
	editor or actually log the player in.  

syntax: 
    plist [[-inp] [-l #]] <players>

    -n    The '-n' tells plist to list only the name of the player.
          The '-n' flag is intented to be used with the '-l #' 
          flag to allow the output list of players to be piped
          or redirected into another command.

    -i    The '-i' flag requires plist to list all the objects in the
          player inventory, including items in containers.  The
          output format is a bit rough, so some line wrap around
          may occur.  NOTE:  It is not wise to type "plist -i *" in
          the player directory due to the massive amount of data
          that would be produced.

    -p    The '-p' requires plist to display the player password.

    -l #  The '-l #' requires plist to list all players equal to the 
          given level #.


Examples:
    plist -p Foo Bar
      -- this will list the class, level, race and password for 
         Foo and Bar.

    plist -l 1 Player1 ... Player10
      -- this will list all the players that are level 1 in the list
         of players Player1 to Player10.

    plist -i Fubar
      --this will list the class, race, level  and inventory
        for the player Fubar.


PSEARCH COMMAND:

	The psearch command searchs all the characters in the mordor/player
	directory for a specified item.  Psearch will search a characters
	entire inventory including the contents of containers.  Psearch will 
	list a name, the total number of specified object in the player's 
	possession, and how many of the specified objects are in containers.
	Psearch also has the option to list any weapon that does more than
	a specified amount of damage, or list any armor that exceeds a given
	armor rating.

syntax:
    psearch <[object #] [-adnsv #] [-N <name>]> [-P <players>]


    If the first argument for psearch is a number, then psearch will 
	search for the object corresponding to that number.  The item
	number does not have to be given if any of the other flags are set.
	The flags may appear in any order.


    -a #   The '-a' will list all objects on players that have
           an armor rating equal or greater to '#'.

    -d #   The '-d' will list all objects on players that do
           a maxium damage equal or greater than '#'.  This is
           based on ndice*sdice + pdice.

    -n #   The '-n' flag specifies the object number to search for.
           This flag is redundant if the object number has already 
           been specified as the first argument of psearch.

    -s #   The '-s' will list all players that know the spell 
           which corresponds to '#'. The first spell starts at 0.

    -v #   The '-v' will list all objects on players with value
           exceeding '#'.

    -N <name> Requires psearch to use the name following the -N as
           the name of the object to search for.  The given name
           has to perfectly match the object name in ordor for the object
           to be listed.  In cases where the object name is more than
           one word or contains single quotes, the entire name needs
           to be double quoted.   i.e. psearch -N "dragon's blade"

   -P <players> Normally psearch will search all the players in
           the mordor/player/ directory. The '-P' flag requires psearch
           to only search the following list of players.  Note:  the
           list of players still must exist in mordor/player/. The '-P'
           allows a way to limit psearch's search domain.

Examples:
    psearch 212
     --this will list all the players that have object 212 
       (assassin daggers)

    psearch -d 20
     --this will search and list all the players and objects that
       can do 20+ damage. 

    psearch -N "small knife" -P P1 P2 P3
     -- this will search all the given players (P1, P2, P3) that
        have objects with the name of small knife. 


TDEL COMMAND:

	The tdel command will list or delete all files that have not been 
	modified in a specified number of days.  The number of days is
	specified by the first command arguemnt of tdel.  Note: the number
	of days can be a floating number (i.e. 2.2, 60.5, etc).

syntax:
    tdel <# of days> [-d] [-F <files ..>]

    -d  The '-d' flag requires tdel to delete all files that are
        X or more days old, where X is the specified number of days.

    -F  <files...> The '-F' requires tdel to list/delete the specified 
        files after the '-F' flag. If '-F' is not set, tdel will
        list / delete the files in the specifed directory (the
        path is hard coded and currently set to mordor/player/).
        Note: '-F' must appear as the last command flag, since
        all arguements following '-F' are assumed to be file names.
        The files are also assumed to in the current work directory,
        or a relative path to the current working directory
        The files are also assumed to in the current work directory,
        or a relative path to the current working directory.


Examples:
    tdel 10
     -- tdel will LIST all files in the player/ that have not been
        modified in the last 10 days.

    tdel 10 -d
     -- tdel will DELETE all files in the player/ that have not been
        modified in the last 10 days.

    tdel 25 -d -F F1 F2 F3
      -- tdel will delete any files following the -F flag (F1,F2,F3)
         that have not been modified in the last 25 days.
